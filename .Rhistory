knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("https://github.com/fapone/Despesas_medicas/blob/master/despesas.csv")
head(df)
View(df)
df <- read.csv("https://github.com/fapone/Despesas_medicas/blob/despesas.csv")
df <- read.csv("http://datascienceacademy.com.br/blog/aluno/RFundamentos/Datasets/ML/despesas.csv")
head(df)
str(df)
head(df)
str(df)
summary(df)
any(is.na(df))
colnum <- sapply(df, is.numeric)
colnum
data_cor <- cor(df[,colnum])
data_cor
head(data_cor)
corrplot(data_cor, method = 'color')
library(ggplot2)
library(ggthemes)
library(dplyr)
library(corrplot)
library(corrgram)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(corrplot)
library(corrgram)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(corrplot)
library(corrgram)
corrplot(data_cor, method = 'color')
corrplot(data_cor, method = 'color')
library(caTools)
set.seed(101)
amostra <- sample.split(df$gastos, SplitRatio = 0.70)
# Criação dos dados de treino e dados de teste
# Dados de treino - 70% dos dados
treino = subset(df, amostra == TRUE)
head(treino)
str(treino)
# Dados de teste - 30% dos dados
teste = subset(df, amostra == FALSE)
head(teste)
str(teste)
model1 <- lm(gastos ~ ., treino)
prev1 <- predict(model1, teste)
summary(model1)
resultados <- cbind(prev1, teste$gastos)
colnames(resultados) <- c('Previsto','Real')
resultados <- as.data.frame(resultados)
resultados
min(resultados)
max(resultados)
SSE = sum((resultados$Previsto - resultados$Real)^2)
SST = sum( (mean(df$gastos) - resultados$Real)^2)
# R-Squared
# Ajuda a avaliar o nÃ?vel de precisÃ£o do nosso modelo. Quanto maior, melhor, sendo 1 o valor ideal.
R2 = 1 - (SSE/SST)
R2
